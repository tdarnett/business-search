service: business-search
frameworkVersion: '>=1.28.0 <2.0.0'

custom:
  inputBucket: business-file-input
  outputBucket: business-file-output

provider:
  name: aws
  runtime: go1.x
  stage: prod
  region: us-west-2
  httpApi:
    cors: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "s3:Get*"
        - "s3:List*"
        - "s3:PutObject"
      Resource: "arn:aws:s3:::${self:custom.outputBucket}/*"
    - Effect: Allow
      Action:
        - "s3:PutObject"
        - "s3:GetObject"
      Resource: "arn:aws:s3:::${self:custom.inputBucket}/*"
    - Effect: Allow
      Action:
        - ses:*
      Resource: "*"
  environment:
    INPUT_BUCKET: ${self:custom.inputBucket}
    OUTPUT_BUCKET: ${self:custom.outputBucket}


package:
  exclude:
    - ./**
  include:
    - ./bin/**

functions:
  pre-sign:
    handler: bin/pre-sign
    events:
      - httpApi:
          path: /post/pre-signed-url
          method: POST
  transform-data:
    handler: bin/transform-data
    events:
      - s3:
          bucket: ${self:custom.inputBucket}
          event: s3:ObjectCreated:*
          rules:
            - suffix: .csv
    environment:
      GOOGLE_PLACES_API_KEY: ${file(./secrets.json):GOOGLE_PLACES_API_KEY}
  generate-payment-intent:
    handler: bin/generate-payment-intent
    events:
      - httpApi:
          path: /get/file-status
          method: GET
    environment:
      STRIPE_API_KEY: ${file(./secrets.json):STRIPE_API_KEY}
  webhook-handler:
    handler: bin/webhook-handler
    events:
      - httpApi:
          path: /post/events
          method: POST
    environment:
      FROM_EMAIL: ${file(./secrets.json):FROM_EMAIL}
      ADMIN_EMAIL: ${file(./secrets.json):ADMIN_EMAIL}
